apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  labels:
    app: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      imagePullSecrets:
      - name: ecr-secret
      containers:
      - name: flask-app
        image: 093676952285.dkr.ecr.eu-north-1.amazonaws.com/flask-app:latest
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "1"
        env:
        - name: CAPSTONE_TEST
          valueFrom:
            secretKeyRef:
              name: capstone-secret
              key: CAPSTONE_TEST
        - name: DAGSHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: capstone-secret
              key: DAGSHUB_TOKEN
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            secretKeyRef:
              name: capstone-secret
              key: MLFLOW_TRACKING_URI
        - name: DAGSHUB_REPO_OWNER
          valueFrom:
            secretKeyRef:
              name: capstone-secret
              key: DAGSHUB_REPO_OWNER
        - name: DAGSHUB_REPO_NAME
          valueFrom:
            secretKeyRef:
              name: capstone-secret
              key: DAGSHUB_REPO_NAME

---
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
spec:
  type: LoadBalancer
  selector:
    app: flask-app
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000