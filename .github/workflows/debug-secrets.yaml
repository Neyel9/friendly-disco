name: Debug Secrets

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  debug-secrets:
    runs-on: ubuntu-latest
    
    steps:
      - name: Debug AWS Secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          echo "üîç Debugging GitHub Secrets..."
          echo ""
          
          # Check AWS secrets
          echo "üìä AWS Secrets Status:"
          if [ -z "$AWS_ACCESS_KEY_ID" ]; then
            echo "‚ùå AWS_ACCESS_KEY_ID: NOT SET"
          else
            echo "‚úÖ AWS_ACCESS_KEY_ID: SET (length: ${#AWS_ACCESS_KEY_ID})"
          fi
          
          if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
            echo "‚ùå AWS_SECRET_ACCESS_KEY: NOT SET"
          else
            echo "‚úÖ AWS_SECRET_ACCESS_KEY: SET (length: ${#AWS_SECRET_ACCESS_KEY})"
          fi
          
          if [ -z "$AWS_REGION" ]; then
            echo "‚ùå AWS_REGION: NOT SET"
          else
            echo "‚úÖ AWS_REGION: SET ($AWS_REGION)"
          fi
          
          if [ -z "$AWS_ACCOUNT_ID" ]; then
            echo "‚ùå AWS_ACCOUNT_ID: NOT SET"
          else
            echo "‚úÖ AWS_ACCOUNT_ID: SET (length: ${#AWS_ACCOUNT_ID})"
          fi
          
          if [ -z "$ECR_REPOSITORY" ]; then
            echo "‚ùå ECR_REPOSITORY: NOT SET"
          else
            echo "‚úÖ ECR_REPOSITORY: SET ($ECR_REPOSITORY)"
          fi

      - name: Debug DagsHub Secrets
        env:
          DAGSHUB_REPO_OWNER: ${{ secrets.DAGSHUB_REPO_OWNER }}
          DAGSHUB_REPO_NAME: ${{ secrets.DAGSHUB_REPO_NAME }}
          FRIENDLY_DISCO: ${{ secrets.FRIENDLY_DISCO }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
        run: |
          echo ""
          echo "üìä DagsHub/MLflow Secrets Status:"
          
          if [ -z "$DAGSHUB_REPO_OWNER" ]; then
            echo "‚ùå DAGSHUB_REPO_OWNER: NOT SET"
          else
            echo "‚úÖ DAGSHUB_REPO_OWNER: SET ($DAGSHUB_REPO_OWNER)"
          fi
          
          if [ -z "$DAGSHUB_REPO_NAME" ]; then
            echo "‚ùå DAGSHUB_REPO_NAME: NOT SET"
          else
            echo "‚úÖ DAGSHUB_REPO_NAME: SET ($DAGSHUB_REPO_NAME)"
          fi
          
          if [ -z "$FRIENDLY_DISCO" ]; then
            echo "‚ùå FRIENDLY_DISCO: NOT SET"
          else
            echo "‚úÖ FRIENDLY_DISCO: SET (length: ${#FRIENDLY_DISCO})"
          fi
          
          if [ -z "$S3_BUCKET_NAME" ]; then
            echo "‚ùå S3_BUCKET_NAME: NOT SET"
          else
            echo "‚úÖ S3_BUCKET_NAME: SET ($S3_BUCKET_NAME)"
          fi
          
          if [ -z "$CAPSTONE_TEST" ]; then
            echo "‚ùå CAPSTONE_TEST: NOT SET"
          else
            echo "‚úÖ CAPSTONE_TEST: SET (length: ${#CAPSTONE_TEST})"
          fi

      - name: Test AWS CLI Configuration
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo ""
          echo "üß™ Testing AWS CLI Configuration..."
          
          if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ] && [ -n "$AWS_REGION" ]; then
            echo "‚úÖ All AWS secrets are set, testing configuration..."
            
            # Configure AWS CLI
            aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
            aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
            aws configure set region "$AWS_REGION"
            aws configure set output json
            
            # Test AWS connection
            echo "üîç Testing AWS connection..."
            aws sts get-caller-identity || echo "‚ùå AWS authentication failed"
          else
            echo "‚ùå Cannot test AWS CLI - missing required secrets"
          fi
